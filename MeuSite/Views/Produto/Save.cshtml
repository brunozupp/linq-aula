@model MeuSite.Models.Produto

@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var title = "";
}

@if (Model != null && Model.ID > 0)
{
    title = "Atualizar Produto";
}
else
{
    title = "Novo Produto";
}

<div class="container">
    <div class="row">
        <div class="col s6 offset-s3 center-align">
            <h4 class="line-title">@title</h4>
        </div>
    </div>

    <div class="row">

        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "col offset-s3 s6", id = "formSave" }))
        {
            @Html.AntiForgeryToken()

            <div class="row">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="row row-form-field">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { id = "Nome", placeholder = "Digite o nome do produto" } })
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "", @for = "Nome" })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "helper-text red-text" })
                    </div>
                </div>

                <div class="row row-form-field">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { id = "Descricao", placeholder = "Digite uma descrição" } })
                        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "", @for = "Descricao" })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "helper-text red-text" })
                    </div>
                </div>

                <div class="row row-form-field">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { id = "Quantidade", placeholder = "Digite uma quantidade" } })
                        @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "", @for = "Quantidade" })
                        @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "helper-text red-text" })
                    </div>
                </div>

                <div class="row row-form-field">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.ValorUnitario, new { htmlAttributes = new { id = "ValorUnitario", placeholder = "Digite uma valor", data_mask = "###0.00", data_mask_reverse = "true" } })
                        @Html.LabelFor(model => model.ValorUnitario, htmlAttributes: new { @class = "", @for = "ValorUnitario" })
                        @Html.ValidationMessageFor(model => model.ValorUnitario, "", new { @class = "helper-text red-text" })
                    </div>
                </div>





                <div class="right">
                    <button class="btn blue darken-2" type="submit">Salvar</button>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/Content/js/produto.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
